# -*- coding: utf-8 -*-
"""02_18241010_ShababIntisharRahman

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L6k1eroeL52BuKj70N8AeZLimtJOlACQ
"""

d = "hello world"
print (d)

c = " this is a test"
print (d+ c)

eg = ["a","b"]
if (eg[1] == "b"):
  print("this is working")
  eg[1] =2
  print (eg[1])
eg2 = ["f"]
print (eg[1])
print (eg2[0])

x = []
with open('input.txt') as f:
  lines= f.readlines()

for line in lines:
  x.append(line.split())

print (x)
print(x[0][0])
#print(x[1][0])
#print(x[2][0])
#print(x[3][0])

#if ((x[0][0]) == "N") : 
# x[0][0] = 0 

#print(x[0][0])

for i in range(len(x)):
        for j in range(len(x[i])):
#               print(x[i][j])
                if ((x[i][j]) == "N") :
                   x[i][j] = 0
                elif ((x[i][j]) == "Y") :
                   x[i][j] = 1
print (x)

def infected(x) : 
     max_inf = 0 
     for row in range (len(x)):
       for col in range(len(x[0])):
         if x[row][col] == 1 :
          infec = count_inf(x, row, col)
          max_inf = max(max_inf, infec)
     return max_inf
       

def count_inf(x, row, col):
  if any([row < 0, col < 0, row >= len(x), col >=len(x[0])]):
    return 0
  
  if x[row][col] == 0:
    return 0
  
  count = 1 
  x[row][col] = 0

  for r in range(row-1,row+2):
    for c in range(col-1,col+2):
      if any([r != row , c != col]):
        count += count_inf(x, r, c)
  return count

infected(x)

#this code is not functioning as the second value in the input field is the column length 
#when checking for values , the list is going out of bounds. 
#I have tried to address this issue by checking for the value in the specific cell before the recusion occurs but failed




x = []
with open('input2.txt') as f:
  lines= f.readlines()

for line in lines:
  x.append(line.split())

#print (x)

for i in range(len(x)):
        for j in range(len(x[i])):
#               print(x[i][j])
                if ((x[i][j]) == "A") :
                   x[i][j] = 0
                elif ((x[i][j]) == "T") :
                   x[i][j] = 1
                elif ((x[i][j]) == "H") :
                   x[i][j] = 2
                elif ((x[i][j]) == "5") :
                   x[i][j] = 5   
                elif ((x[i][j]) == "4") :
                   x[i][j] = 4
print (x)
#print (len(x)-1)
#print(x[2][0])
 

def finder(x) : 
  timer =0
  for row in range(2,len(x)-1):
    for col in range(len(x[2])-1):
      if x[row][col] == 0 :
#        print(col)
        timer = attack(x, row, col)
  return timer

def attack(x, row, col) :
  print(x[row][col])
  if any([row < 1, col < 0, row > len(x)-1, col >len(x[2])-1]):
    exit()
# the above ^ value check is not working     
  if x[row][col] != 0:
    exit(1)
# the above ^ value check is not working 
  

  time = 0
  for r in range(row-1, col+2):
     for c in range(col-1,col+2):
       print(r)
       print(c)
       print(x[r][c])
#we can see it is iterating properly, but getting stuck my lack of input at [0][1]
#due to above if conditions not functioning, as column value is being allowed to be -1
       if any([r != row , c != col]):
         print(x[r][c])
         if (x[r][c] == 2):
          x[r][c] = 0
          time = time +1
          attack(x, r, c)
  return time

finder(x)

